global proc string Addition(float $inputs[])
{
    int $count = `size $inputs`;
    float $sum = 0;

    for ($i = 0; $i < $count; $i++)
    {
        print ($inputs[$i]);
        $sum += $inputs[$i];
        if ($i < ($count - 1))
        {
            print (" + ");
        }
    }
    return ($sum);
}

//Calculates the 
global proc string Subtraction(float $inputs[])
{
    int $count = `size $inputs`;
    float $difference = $inputs[0];
    print ($inputs[0] + " - ");
    
    for ($i = 1; $i < $count; $i++)
    {
        print ($inputs[$i]);
        $difference -= $inputs[$i];
        if ($i < ($count - 1))
        {
            print (" - ");
        }
    }
    return ($difference);
}

//Calculates the product of an array
global proc string Multiplication(float $inputs[])
{
    int $count = `size $inputs`;
    float $product = $inputs[0];
    print ($inputs[0] + " x ");
    
    for ($i = 1; $i < $count; $i++)
    {
        print ($inputs[$i]);
        $product *= $inputs[$i];
        if ($i < ($count - 1))
        {
            print (" x ");
        }
    }
    return ($product);
}

//Calculates the quotient of an array
global proc string Division(float $inputs[])
{
    int $count = `size $inputs`;
    float $quotient = $inputs[0];
    print ($inputs[0] + " / ");
    
    for ($i = 1; $i < $count; $i++)
    {
        print ($inputs[$i]);
        $quotient /= $inputs[$i];
        if ($i < ($count - 1))
        {
            print (" / ");
        }
    }
    return ($quotient);
}

//Calculates the power of an array
global proc string ToThePowerOf(float $inputs[])
{
    int $count = `size $inputs`;

    if ($count < 3)
    {
        float $power = `pow $inputs[0] $inputs[1]`;
        return ($inputs[0] + " raised to the power of " + $inputs[1] + " is " + $power);
    }
    else
    {
        return ("To find the power of something please only input two values, The first is the base, the second the exponent");
    }
}

//Calculates the median of an array
global proc string Median(float $inputs[])
{
    float $sortedInputs[] = `sort $inputs`;
    int $count = `size $sortedInputs`;
    
    //Checks if array has even amount of elements
    //if odd
    if ($count % 2 != 0)
    {
        int $medianVal = ($count / 2);
        print ("The median of the data set:\n");
        print ($sortedInputs);
        print ("is: " + $sortedInputs[$medianVal] + "\n");
    }
    //If even
    else 
    {
        int $lesserMedianVal = ($count / 2) -1;
        int $greaterMedianVal = ($count / 2);

        float $aMedian = $sortedInputs[$lesserMedianVal] + $sortedInputs[$greaterMedianVal];
        float $median = $aMedian / 2;

        print ("The median of the data set:\n");
        print ($sortedInputs);
        return ($median);
    }
}

//Calculates the mean of an array
global proc string Mean(float $inputs[])
{
    int $count = `size $inputs`;
    float $sum = 0;

    for ($i = 0; $i < $count; $i++)
    {
        print ($inputs[$i]);
        $sum += $inputs[$i];
        if ($i < ($count - 1))
        {
            print (" + ");
        }
    }
    float $mean = $sum / $count;
    print (" = " + $sum + "\n" + $sum + " / " + $count);
    return ($mean);
}

//The main calculator function
global proc string Calculator(float $inputs[], int $calculatorFunction)
{
    if ($calculatorFunction == 1)
    {
        return Addition($inputs);
    }
    else if ($calculatorFunction == 2)
    {
        return Subtraction($inputs);
    }
    else if ($calculatorFunction == 3)
    {
        return Multiplication($inputs);
    }
    else if ($calculatorFunction == 4)
    {
        return Division($inputs);
    }
    else if ($calculatorFunction == 5)
    {
        return ToThePowerOf($inputs);
    }
    else if ($calculatorFunction == 6)
    {
        return Median($inputs);
    }
    else if ($calculatorFunction == 7)
    {
        return Mean($inputs);
    }
    else 
    {
        return ("Please input a value from 1 - 7");
    }
}

//Calculator({5,3}, 2);

global proc Mathimize()
{
    string $operField = `optionVar -q "rCollectionField"`;
    string $arrayData = `optionVar -q "Input1"`;
    string $resultField = `optionVar -q "Result"`;

    string $oper = `intField -q -value $operField`;

    print ($oper);

    //string $result = Calculator({}, $oper);

    //textField -e -text $result $resultField;
}


global proc CalUI()
{
    string $mWindow = "calWindow";

    if (`window -exists $mWindow`)
    deleteUI $mWindow;

    $mWindow = `window -title "Calculator"
                                 -widthHeight 300 400
                                 -resizeToFitChildren 1
                                 $mWindow`;
    string $mColumn = `columnLayout -parent $mWindow -adjustableColumn 1`;

    optionVar -stringValue "arrayField" `textField -parent $mColumn -placeholderText "Enter your data here..."`;
    button -parent $mColumn -label "MATHIMIZE" -command "Mathimize";
    optionVar -stringValue "rCollectionField" `radioCollection "rCollection"`;
    radioButton -parent $mColumn -collection "rCollection";
    radioButton;
    radioButton;
    radioButton;
    radioButton;
    radioButton;
    radioButton;
    
    optionVar -stringValue "Result" `textField -parent $mColumn -editable 0`;
    

    showWindow $mWindow;
}

CalUI();